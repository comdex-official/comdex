swagger: '2.0'
info:
  description: API Documentation of Petri custom modules
  title: Petri Swagger Documentation
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
host: localhost:1317
schemes:
  - http
  - https
tags:
  - name: Asset
    description: Everything about Assets
    externalDocs:
      description: Find out more
      url: http://petri.one
  - name: Oracle
    description: Everything about Oracle
    externalDocs:
      description: Find out more
      url: http://petri.one
  - name: Vault
    description: Everything about Vault
    externalDocs:
      description: Find out more
      url: http://petri.one
paths:
  /petri/asset/v1beta1/assets:
    get:
      description: Get list of all available Assets
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Asset
      summary: Available Assets
      parameters: []
      responses:
        '200':
          description: Message for a successful request.
          schema:
            $ref: '#/definitions/assets.asset.queryResponse.all'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/asset/v1beta1/assets/{assetId}:
    get:
      description: Search for any assets by using assetId
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Asset
      summary: Search for an asset by Asset ID
      parameters:
        - type: string
          description: Asset ID
          name: assetId
          in: path
          required: true
      responses:
        '200':
          description: Message for a successful search.
          schema:
            $ref: '#/definitions/assets.asset.queryResponse.one.success'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/asset/v1beta1/pairs:
    get:
      description: Get list of all available Pairs
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Asset
      summary: Available Pairs
      parameters: []
      responses:
        '200':
          description: Message for a successful request.
          schema:
            $ref: '#/definitions/assets.pair.queryResponse.all'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/asset/v1beta1/pairs/{pairId}:
    get:
      description: Search for any assets by using assetId
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Asset
      summary: Search for pair by pair ID
      parameters:
        - type: string
          description: Pair ID
          name: pairId
          in: path
          required: true
      responses:
        '200':
          description: Message for a successful search.
          schema:
            $ref: '#/definitions/assets.pair.queryResponse.one.success'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/asset/v1beta1/params:
    get:
      description: Params
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Asset
      summary: Params
      parameters: []
      responses:
        '200':
          description: Message for a successful request.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  admin:
                    type: string
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/oracle/v1beta1/markets:
    get:
      description: Get list of all available Markets
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Oracle
      summary: Available Markets
      parameters: []
      responses:
        '200':
          description: Message for a successful request.
          schema:
            $ref: '#/definitions/oracle.markets.queryResponse.all'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/oracle/v1beta1/markets/{marketSymbol}:
    get:
      description: Search for any market by using market symbol
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Oracle
      summary: Search for market by market symbol
      parameters:
        - type: string
          description: Symbol
          name: marketSymbol
          in: path
          required: true
      responses:
        '200':
          description: Message for a successful search.
          schema:
            $ref: '#/definitions/oracle.market.queryResponse.one.success'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/oracle/v1beta1/params:
    get:
      description: Params
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Oracle
      summary: Params
      parameters: []
      responses:
        '200':
          description: Message for a successful request.
          schema:
            type: object
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/vault/v1beta1/vaults:
    get:
      description: Get list of all available vaults
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Vault
      summary: Available Vaults
      parameters: []
      responses:
        '200':
          description: Message for a successful request.
          schema:
            $ref: '#/definitions/vault.vaults.queryResponse.all'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
  /petri/vault/v1beta1/vaults/{vaultId}:
    get:
      description: Search for any vault by using vaultId
      consumes:
        - text/plain
      produces:
        - application/json
      tags:
        - Vault
      summary: Search for an vault by Vault ID
      parameters:
        - type: string
          description: Vault ID
          name: vaultId
          in: path
          required: true
      responses:
        '200':
          description: Message for a successful search.
          schema:
            $ref: '#/definitions/vault.vaults.queryResponse.one.success'
        default:
          description: Message for an unexpected error.
          schema:
            $ref: '#/definitions/helpers.errorObject'
definitions:
  assets.asset.queryResponse.all:
    type: object
    properties:
      assets:
        type: array
        items:
          $ref: '#/definitions/helpers.assetObject'
      pagination:
        type: object
        properties:
          next_key:
            type: string
          total:
            type: integer
  assets.asset.queryResponse.one.success:
    type: object
    properties:
      asset:
        $ref: '#/definitions/helpers.assetObject'
  assets.pair.queryResponse.all:
    type: object
    properties:
      pairInfo:
        type: array
        items:
          $ref: '#/definitions/helpers.pairObject'
      pagination:
        type: object
        properties:
          next_key:
            type: string
          total:
            type: integer
  assets.pair.queryResponse.one.success:
    type: object
    properties:
      pairInfo:
        $ref: '#/definitions/helpers.pairObject'
  oracle.markets.queryResponse.all:
    type: object
    properties:
      markets:
        type: array
        items:
          $ref: '#/definitions/helpers.marketObject'
      pagination:
        type: object
        properties:
          next_key:
            type: string
          total:
            type: integer
  oracle.market.queryResponse.one.success:
    type: object
    properties:
      market:
        $ref: '#/definitions/helpers.marketObject'
  vault.vaults.queryResponse.all:
    type: object
    properties:
      vaultsInfo:
        type: array
        items:
          $ref: '#/definitions/helpers.vaultObject'
      pagination:
        type: object
        properties:
          next_key:
            type: string
          total:
            type: integer
  vault.vaults.queryResponse.one.success:
    type: object
    properties:
      vaultInfo:
        $ref: '#/definitions/helpers.vaultObject'
  helpers.assetObject:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      denom:
        type: string
      decimals:
        type: string
  helpers.pairObject:
    type: object
    properties:
      id:
        type: string
      asset_in:
        type: string
      denom_in:
        type: string
      asset_out:
        type: string
      denom_out:
        type: string
      liquidation_ratio:
        type: string
  helpers.marketObject:
    type: object
    properties:
      symbol:
        type: string
      script_id:
        type: string
  helpers.vaultObject:
    type: object
    properties:
      id:
        type: string
      pair_id:
        type: string
      owner:
        type: string
      collateral:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
      debt:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
      collateralization_ratio:
        type: string
  helpers.errorObject:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/helpers.Mappable'
  helpers.Mappable:
    type: object
