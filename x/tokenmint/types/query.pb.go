// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: petri/tokenmint/v1beta1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryAllTokenMintedForAllAppsRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllTokenMintedForAllAppsRequest) Reset()         { *m = QueryAllTokenMintedForAllAppsRequest{} }
func (m *QueryAllTokenMintedForAllAppsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllTokenMintedForAllAppsRequest) ProtoMessage()    {}
func (*QueryAllTokenMintedForAllAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c1a33cde9c8705, []int{0}
}
func (m *QueryAllTokenMintedForAllAppsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllTokenMintedForAllAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllTokenMintedForAllAppsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllTokenMintedForAllAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllTokenMintedForAllAppsRequest.Merge(m, src)
}
func (m *QueryAllTokenMintedForAllAppsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllTokenMintedForAllAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllTokenMintedForAllAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllTokenMintedForAllAppsRequest proto.InternalMessageInfo

type QueryAllTokenMintedForAllAppsResponse struct {
	TokenMint  []TokenMint         `protobuf:"bytes,1,rep,name=tokenMint,proto3" json:"tokenMint" yaml:"tokenMint"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllTokenMintedForAllAppsResponse) Reset()         { *m = QueryAllTokenMintedForAllAppsResponse{} }
func (m *QueryAllTokenMintedForAllAppsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllTokenMintedForAllAppsResponse) ProtoMessage()    {}
func (*QueryAllTokenMintedForAllAppsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c1a33cde9c8705, []int{1}
}
func (m *QueryAllTokenMintedForAllAppsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllTokenMintedForAllAppsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllTokenMintedForAllAppsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllTokenMintedForAllAppsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllTokenMintedForAllAppsResponse.Merge(m, src)
}
func (m *QueryAllTokenMintedForAllAppsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllTokenMintedForAllAppsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllTokenMintedForAllAppsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllTokenMintedForAllAppsResponse proto.InternalMessageInfo

type QueryTokenMintedByAppRequest struct {
	AppId      uint64             `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryTokenMintedByAppRequest) Reset()         { *m = QueryTokenMintedByAppRequest{} }
func (m *QueryTokenMintedByAppRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTokenMintedByAppRequest) ProtoMessage()    {}
func (*QueryTokenMintedByAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c1a33cde9c8705, []int{2}
}
func (m *QueryTokenMintedByAppRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryTokenMintedByAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryTokenMintedByAppRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryTokenMintedByAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTokenMintedByAppRequest.Merge(m, src)
}
func (m *QueryTokenMintedByAppRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryTokenMintedByAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTokenMintedByAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTokenMintedByAppRequest proto.InternalMessageInfo

type QueryTokenMintedByAppResponse struct {
	TokenMint  TokenMint           `protobuf:"bytes,1,opt,name=tokenMint,proto3" json:"tokenMint" yaml:"tokenMint"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryTokenMintedByAppResponse) Reset()         { *m = QueryTokenMintedByAppResponse{} }
func (m *QueryTokenMintedByAppResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTokenMintedByAppResponse) ProtoMessage()    {}
func (*QueryTokenMintedByAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c1a33cde9c8705, []int{3}
}
func (m *QueryTokenMintedByAppResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryTokenMintedByAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryTokenMintedByAppResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryTokenMintedByAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTokenMintedByAppResponse.Merge(m, src)
}
func (m *QueryTokenMintedByAppResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryTokenMintedByAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTokenMintedByAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTokenMintedByAppResponse proto.InternalMessageInfo

type QueryTokenMintedByAppAndAssetRequest struct {
	AppId      uint64             `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	AssetId    uint64             `protobuf:"varint,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty" yaml:"asset_id"`
	Pagination *query.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryTokenMintedByAppAndAssetRequest) Reset()         { *m = QueryTokenMintedByAppAndAssetRequest{} }
func (m *QueryTokenMintedByAppAndAssetRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTokenMintedByAppAndAssetRequest) ProtoMessage()    {}
func (*QueryTokenMintedByAppAndAssetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c1a33cde9c8705, []int{4}
}
func (m *QueryTokenMintedByAppAndAssetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryTokenMintedByAppAndAssetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryTokenMintedByAppAndAssetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryTokenMintedByAppAndAssetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTokenMintedByAppAndAssetRequest.Merge(m, src)
}
func (m *QueryTokenMintedByAppAndAssetRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryTokenMintedByAppAndAssetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTokenMintedByAppAndAssetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTokenMintedByAppAndAssetRequest proto.InternalMessageInfo

type QueryTokenMintedByAppAndAssetResponse struct {
	MintedTokens MintedTokens        `protobuf:"bytes,1,opt,name=mintedTokens,proto3" json:"mintedTokens" yaml:"mintedTokens"`
	Pagination   *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryTokenMintedByAppAndAssetResponse) Reset()         { *m = QueryTokenMintedByAppAndAssetResponse{} }
func (m *QueryTokenMintedByAppAndAssetResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTokenMintedByAppAndAssetResponse) ProtoMessage()    {}
func (*QueryTokenMintedByAppAndAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c1a33cde9c8705, []int{5}
}
func (m *QueryTokenMintedByAppAndAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryTokenMintedByAppAndAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryTokenMintedByAppAndAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryTokenMintedByAppAndAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTokenMintedByAppAndAssetResponse.Merge(m, src)
}
func (m *QueryTokenMintedByAppAndAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryTokenMintedByAppAndAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTokenMintedByAppAndAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTokenMintedByAppAndAssetResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QueryAllTokenMintedForAllAppsRequest)(nil), "petri.tokenmint.v1beta1.QueryAllTokenMintedForAllAppsRequest")
	proto.RegisterType((*QueryAllTokenMintedForAllAppsResponse)(nil), "petri.tokenmint.v1beta1.QueryAllTokenMintedForAllAppsResponse")
	proto.RegisterType((*QueryTokenMintedByAppRequest)(nil), "petri.tokenmint.v1beta1.QueryTokenMintedByAppRequest")
	proto.RegisterType((*QueryTokenMintedByAppResponse)(nil), "petri.tokenmint.v1beta1.QueryTokenMintedByAppResponse")
	proto.RegisterType((*QueryTokenMintedByAppAndAssetRequest)(nil), "petri.tokenmint.v1beta1.QueryTokenMintedByAppAndAssetRequest")
	proto.RegisterType((*QueryTokenMintedByAppAndAssetResponse)(nil), "petri.tokenmint.v1beta1.QueryTokenMintedByAppAndAssetResponse")
}

func init() {
	proto.RegisterFile("petri/tokenmint/v1beta1/query.proto", fileDescriptor_47c1a33cde9c8705)
}

var fileDescriptor_47c1a33cde9c8705 = []byte{
	// 663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0x41, 0x6b, 0xd4, 0x4e,
	0x18, 0xc6, 0x33, 0xdb, 0x7f, 0xfb, 0xd7, 0xa9, 0xa2, 0x4d, 0x2d, 0x2c, 0x6b, 0xcd, 0x96, 0xb4,
	0x6a, 0x11, 0x92, 0xd0, 0x16, 0x5b, 0x11, 0xac, 0x24, 0x07, 0x41, 0xa4, 0xa0, 0x51, 0x2f, 0x8a,
	0xca, 0x6c, 0x33, 0x8d, 0xc1, 0x6c, 0x66, 0xda, 0x99, 0x8a, 0x4b, 0xe9, 0x45, 0xf0, 0x2e, 0xf8,
	0x21, 0xf4, 0xe0, 0x07, 0xd9, 0x63, 0xc1, 0x8b, 0x07, 0xd9, 0xea, 0x6e, 0x3f, 0x80, 0x2c, 0x78,
	0x97, 0xcc, 0x24, 0xbb, 0x69, 0x6d, 0x4c, 0x57, 0xea, 0xc1, 0x5b, 0x48, 0xde, 0x79, 0xe6, 0xf9,
	0xcd, 0x33, 0xef, 0x1b, 0x38, 0xb3, 0x4a, 0xea, 0x1e, 0x7e, 0x65, 0x71, 0xf2, 0x02, 0x47, 0xf5,
	0x20, 0xe2, 0xd6, 0xcb, 0xb9, 0x1a, 0xe6, 0x68, 0xce, 0x5a, 0xdf, 0xc4, 0x1b, 0x0d, 0x93, 0x6e,
	0x10, 0x4e, 0xd4, 0xb2, 0xac, 0x32, 0x7b, 0x55, 0x66, 0x52, 0x55, 0xb9, 0xb2, 0x4a, 0x58, 0x9d,
	0x30, 0xab, 0x86, 0x18, 0x96, 0x4b, 0x7a, 0x02, 0x14, 0xf9, 0x41, 0x84, 0x78, 0x40, 0x22, 0xa9,
	0x52, 0x99, 0xce, 0xdd, 0x4b, 0x48, 0xca, 0xa2, 0x73, 0x3e, 0xf1, 0x89, 0x78, 0xb4, 0xe2, 0xa7,
	0xe4, 0xed, 0xa4, 0x4f, 0x88, 0x1f, 0x62, 0x0b, 0xd1, 0xc0, 0x42, 0x51, 0x44, 0xb8, 0xd0, 0x65,
	0xf2, 0xab, 0xfe, 0x06, 0xc0, 0x99, 0x7b, 0xf1, 0xde, 0x76, 0x18, 0x3e, 0x88, 0xc5, 0x57, 0x82,
	0x88, 0x63, 0xef, 0x16, 0xd9, 0xb0, 0xc3, 0xd0, 0xa6, 0x94, 0xb9, 0x78, 0x7d, 0x13, 0x33, 0xae,
	0x3e, 0x81, 0xb0, 0xef, 0xaa, 0x0c, 0xa6, 0xc0, 0xec, 0xe8, 0xfc, 0x25, 0x53, 0x22, 0x98, 0x31,
	0x82, 0x29, 0xa9, 0x13, 0x5f, 0xe6, 0x5d, 0xe4, 0xe3, 0x64, 0xad, 0x33, 0xd1, 0x6d, 0x55, 0xc7,
	0x1a, 0xa8, 0x1e, 0x5e, 0xd7, 0xfb, 0x1a, 0xba, 0x9b, 0x11, 0xd4, 0xf7, 0x00, 0xbc, 0x58, 0xe0,
	0x83, 0x51, 0x12, 0x31, 0xac, 0x3e, 0x86, 0x27, 0x79, 0x5a, 0x50, 0x06, 0x53, 0x43, 0xb3, 0xa3,
	0xf3, 0xd3, 0x66, 0xde, 0x21, 0x9b, 0x3d, 0x2d, 0xa7, 0xdc, 0x6c, 0x55, 0x95, 0x6e, 0xab, 0x7a,
	0x56, 0x1a, 0xe9, 0x69, 0xe8, 0x6e, 0x5f, 0x4f, 0x7d, 0xba, 0x8f, 0xb2, 0x24, 0x28, 0x2f, 0x17,
	0x52, 0x4a, 0x67, 0x47, 0xc1, 0x7c, 0x0f, 0xe0, 0xa4, 0xc0, 0xcc, 0x30, 0x3a, 0x0d, 0x9b, 0xd2,
	0xf4, 0x98, 0x67, 0xe1, 0x08, 0xa2, 0xf4, 0x59, 0xe0, 0x89, 0x23, 0xfe, 0xcf, 0x19, 0xeb, 0xb6,
	0xaa, 0xa7, 0xa5, 0xa6, 0x7c, 0xaf, 0xbb, 0xc3, 0x88, 0xd2, 0xdb, 0xde, 0x81, 0x40, 0x4a, 0xc7,
	0x1d, 0xc8, 0x17, 0x00, 0x2f, 0xe4, 0x38, 0x3d, 0x3c, 0x08, 0xf0, 0x4f, 0x05, 0xb1, 0x9b, 0xde,
	0xfb, 0x83, 0x78, 0x76, 0xe4, 0xd9, 0x8c, 0x61, 0x3e, 0x78, 0x20, 0x26, 0x3c, 0x81, 0xe2, 0x95,
	0x71, 0x6d, 0x49, 0xd4, 0x8e, 0x77, 0x5b, 0xd5, 0x33, 0x49, 0x6d, 0xf2, 0x45, 0x77, 0xff, 0x17,
	0x8f, 0xbf, 0x04, 0x38, 0x74, 0xdc, 0x01, 0x7e, 0x4f, 0x3b, 0x2a, 0x9f, 0x30, 0x09, 0xd2, 0x87,
	0xa7, 0xea, 0xe2, 0xb3, 0xa8, 0x64, 0x99, 0xe6, 0xce, 0xc9, 0x72, 0x25, 0x53, 0xed, 0x9c, 0x4f,
	0xe2, 0x1c, 0x97, 0x76, 0xb2, 0x4a, 0xba, 0xbb, 0x4f, 0xf8, 0x6f, 0x87, 0x3a, 0xff, 0x71, 0x18,
	0x0e, 0x0b, 0x64, 0x75, 0x37, 0xbd, 0xbd, 0x79, 0xe3, 0x44, 0x5d, 0xce, 0xc7, 0x3b, 0xca, 0x3c,
	0xac, 0xdc, 0xfc, 0xe3, 0xf5, 0x92, 0x47, 0xbf, 0xf1, 0xfa, 0xd3, 0xde, 0xbb, 0xd2, 0x92, 0x7a,
	0xd5, 0xca, 0x9d, 0xed, 0x9c, 0x70, 0x14, 0x1a, 0xe2, 0xbd, 0x21, 0x0f, 0xd2, 0x40, 0x61, 0x68,
	0xa0, 0xd8, 0x7f, 0x13, 0xc0, 0x89, 0x43, 0xe3, 0x55, 0x17, 0x0b, 0x9c, 0xe5, 0x8c, 0x9e, 0xca,
	0xd2, 0xc0, 0xeb, 0x12, 0x92, 0x65, 0x41, 0x72, 0x4d, 0x5d, 0xfc, 0x1d, 0x49, 0x86, 0xa1, 0xd6,
	0x88, 0x11, 0xac, 0x2d, 0xd9, 0x3f, 0xdb, 0xea, 0x8f, 0xbc, 0x51, 0x93, 0xde, 0xd4, 0xc2, 0xb0,
	0x0a, 0x9a, 0xb8, 0x30, 0xac, 0xa2, 0x16, 0xd1, 0xef, 0x0b, 0xc4, 0x15, 0xf5, 0xce, 0x40, 0x88,
	0x06, 0x8a, 0x3c, 0x43, 0xb4, 0x7b, 0x0f, 0xd6, 0xda, 0x4a, 0x27, 0xc1, 0xb6, 0xf3, 0xb0, 0xf9,
	0x4d, 0x53, 0x3e, 0xb4, 0x35, 0xa5, 0xd9, 0xd6, 0xc0, 0x4e, 0x5b, 0x03, 0x5f, 0xdb, 0x1a, 0x78,
	0xdb, 0xd1, 0x94, 0x9d, 0x8e, 0xa6, 0x7c, 0xee, 0x68, 0xca, 0xa3, 0x05, 0x3f, 0xe0, 0xcf, 0x37,
	0x6b, 0xb1, 0xfb, 0x64, 0x63, 0x83, 0xac, 0xad, 0x05, 0xab, 0x01, 0x0a, 0x53, 0x23, 0x59, 0x2b,
	0xbc, 0x41, 0x31, 0xab, 0x8d, 0x88, 0x3f, 0xfb, 0xc2, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c,
	0xb4, 0xe7, 0x43, 0xa0, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	QueryAllTokenMintedForAllApps(ctx context.Context, in *QueryAllTokenMintedForAllAppsRequest, opts ...grpc.CallOption) (*QueryAllTokenMintedForAllAppsResponse, error)
	QueryTokenMintedByApp(ctx context.Context, in *QueryTokenMintedByAppRequest, opts ...grpc.CallOption) (*QueryTokenMintedByAppResponse, error)
	QueryTokenMintedByAppAndAsset(ctx context.Context, in *QueryTokenMintedByAppAndAssetRequest, opts ...grpc.CallOption) (*QueryTokenMintedByAppAndAssetResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) QueryAllTokenMintedForAllApps(ctx context.Context, in *QueryAllTokenMintedForAllAppsRequest, opts ...grpc.CallOption) (*QueryAllTokenMintedForAllAppsResponse, error) {
	out := new(QueryAllTokenMintedForAllAppsResponse)
	err := c.cc.Invoke(ctx, "/petri.tokenmint.v1beta1.Query/QueryAllTokenMintedForAllApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryTokenMintedByApp(ctx context.Context, in *QueryTokenMintedByAppRequest, opts ...grpc.CallOption) (*QueryTokenMintedByAppResponse, error) {
	out := new(QueryTokenMintedByAppResponse)
	err := c.cc.Invoke(ctx, "/petri.tokenmint.v1beta1.Query/QueryTokenMintedByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryTokenMintedByAppAndAsset(ctx context.Context, in *QueryTokenMintedByAppAndAssetRequest, opts ...grpc.CallOption) (*QueryTokenMintedByAppAndAssetResponse, error) {
	out := new(QueryTokenMintedByAppAndAssetResponse)
	err := c.cc.Invoke(ctx, "/petri.tokenmint.v1beta1.Query/QueryTokenMintedByAppAndAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	QueryAllTokenMintedForAllApps(context.Context, *QueryAllTokenMintedForAllAppsRequest) (*QueryAllTokenMintedForAllAppsResponse, error)
	QueryTokenMintedByApp(context.Context, *QueryTokenMintedByAppRequest) (*QueryTokenMintedByAppResponse, error)
	QueryTokenMintedByAppAndAsset(context.Context, *QueryTokenMintedByAppAndAssetRequest) (*QueryTokenMintedByAppAndAssetResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) QueryAllTokenMintedForAllApps(ctx context.Context, req *QueryAllTokenMintedForAllAppsRequest) (*QueryAllTokenMintedForAllAppsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllTokenMintedForAllApps not implemented")
}
func (*UnimplementedQueryServer) QueryTokenMintedByApp(ctx context.Context, req *QueryTokenMintedByAppRequest) (*QueryTokenMintedByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTokenMintedByApp not implemented")
}
func (*UnimplementedQueryServer) QueryTokenMintedByAppAndAsset(ctx context.Context, req *QueryTokenMintedByAppAndAssetRequest) (*QueryTokenMintedByAppAndAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTokenMintedByAppAndAsset not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_QueryAllTokenMintedForAllApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllTokenMintedForAllAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAllTokenMintedForAllApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/petri.tokenmint.v1beta1.Query/QueryAllTokenMintedForAllApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAllTokenMintedForAllApps(ctx, req.(*QueryAllTokenMintedForAllAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryTokenMintedByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTokenMintedByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryTokenMintedByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/petri.tokenmint.v1beta1.Query/QueryTokenMintedByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryTokenMintedByApp(ctx, req.(*QueryTokenMintedByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryTokenMintedByAppAndAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTokenMintedByAppAndAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryTokenMintedByAppAndAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/petri.tokenmint.v1beta1.Query/QueryTokenMintedByAppAndAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryTokenMintedByAppAndAsset(ctx, req.(*QueryTokenMintedByAppAndAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "petri.tokenmint.v1beta1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryAllTokenMintedForAllApps",
			Handler:    _Query_QueryAllTokenMintedForAllApps_Handler,
		},
		{
			MethodName: "QueryTokenMintedByApp",
			Handler:    _Query_QueryTokenMintedByApp_Handler,
		},
		{
			MethodName: "QueryTokenMintedByAppAndAsset",
			Handler:    _Query_QueryTokenMintedByAppAndAsset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "petri/tokenmint/v1beta1/query.proto",
}

func (m *QueryAllTokenMintedForAllAppsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllTokenMintedForAllAppsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllTokenMintedForAllAppsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllTokenMintedForAllAppsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllTokenMintedForAllAppsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllTokenMintedForAllAppsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.TokenMint) > 0 {
		for iNdEx := len(m.TokenMint) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TokenMint[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryTokenMintedByAppRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryTokenMintedByAppRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryTokenMintedByAppRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryTokenMintedByAppResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryTokenMintedByAppResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryTokenMintedByAppResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.TokenMint.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryTokenMintedByAppAndAssetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryTokenMintedByAppAndAssetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryTokenMintedByAppAndAssetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.AssetId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AssetId))
		i--
		dAtA[i] = 0x10
	}
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryTokenMintedByAppAndAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryTokenMintedByAppAndAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryTokenMintedByAppAndAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.MintedTokens.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryAllTokenMintedForAllAppsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllTokenMintedForAllAppsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TokenMint) > 0 {
		for _, e := range m.TokenMint {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryTokenMintedByAppRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryTokenMintedByAppResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.TokenMint.Size()
	n += 1 + l + sovQuery(uint64(l))
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryTokenMintedByAppAndAssetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	if m.AssetId != 0 {
		n += 1 + sovQuery(uint64(m.AssetId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryTokenMintedByAppAndAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.MintedTokens.Size()
	n += 1 + l + sovQuery(uint64(l))
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryAllTokenMintedForAllAppsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllTokenMintedForAllAppsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllTokenMintedForAllAppsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllTokenMintedForAllAppsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllTokenMintedForAllAppsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllTokenMintedForAllAppsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenMint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenMint = append(m.TokenMint, TokenMint{})
			if err := m.TokenMint[len(m.TokenMint)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryTokenMintedByAppRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryTokenMintedByAppRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryTokenMintedByAppRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryTokenMintedByAppResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryTokenMintedByAppResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryTokenMintedByAppResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenMint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TokenMint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryTokenMintedByAppAndAssetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryTokenMintedByAppAndAssetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryTokenMintedByAppAndAssetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetId", wireType)
			}
			m.AssetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryTokenMintedByAppAndAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryTokenMintedByAppAndAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryTokenMintedByAppAndAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintedTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MintedTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
