// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: comdex/lend/v1beta1/lend.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Lend_Asset struct {
	ID          uint64                                  `protobuf:"varint,1,opt,name=lending_id,json=lendingId,proto3" json:"lending_id,omitempty" yaml:"lending_id"`
	PairID      uint64                                  `protobuf:"varint,2,opt,name=lend_pair_id,json=lendPairId,proto3" json:"lend_pair_id,omitempty" yaml:"pair_id"`
	Owner       string                                  `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty" yaml:"owner"`
	AmountIn    github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,4,opt,name=amount_in,json=amountIn,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount_in" yaml:"amount_in"`
	AmountOut   github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,5,opt,name=amount_out,json=amountOut,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount_out" yaml:"amount_out"`
	LendingTime time.Time                               `protobuf:"bytes,6,opt,name=lending_time,json=lendingTime,proto3,stdtime" json:"lending_time" yaml:"lending_time"`
	Reward      github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,7,opt,name=reward,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"reward" yaml:"reward"`
}

func (m *Lend_Asset) Reset()         { *m = Lend_Asset{} }
func (m *Lend_Asset) String() string { return proto.CompactTextString(m) }
func (*Lend_Asset) ProtoMessage()    {}
func (*Lend_Asset) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87bb4bef8334ddd, []int{0}
}
func (m *Lend_Asset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Lend_Asset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Lend_Asset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Lend_Asset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lend_Asset.Merge(m, src)
}
func (m *Lend_Asset) XXX_Size() int {
	return m.Size()
}
func (m *Lend_Asset) XXX_DiscardUnknown() {
	xxx_messageInfo_Lend_Asset.DiscardUnknown(m)
}

var xxx_messageInfo_Lend_Asset proto.InternalMessageInfo

func (m *Lend_Asset) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Lend_Asset) GetPairID() uint64 {
	if m != nil {
		return m.PairID
	}
	return 0
}

func (m *Lend_Asset) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Lend_Asset) GetAmountIn() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.AmountIn
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *Lend_Asset) GetAmountOut() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.AmountOut
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *Lend_Asset) GetLendingTime() time.Time {
	if m != nil {
		return m.LendingTime
	}
	return time.Time{}
}

func (m *Lend_Asset) GetReward() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.Reward
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

type Borrow_Asset struct {
	ID          uint64                                  `protobuf:"varint,1,opt,name=borrowing_id,json=borrowingId,proto3" json:"borrowing_id,omitempty" yaml:"borrowing_id"`
	ID_         uint64                                  `protobuf:"varint,2,opt,name=lending_id,json=lendingId,proto3" json:"lending_id,omitempty" yaml:"lending_id"`
	PairID      uint64                                  `protobuf:"varint,3,opt,name=lend_pair_id,json=lendPairId,proto3" json:"lend_pair_id,omitempty" yaml:"pair_id"`
	AmountIn    github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,4,opt,name=amount_in,json=amountIn,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount_in" yaml:"amount_in"`
	AmountOut   github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,5,opt,name=amount_out,json=amountOut,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount_out" yaml:"amount_out"`
	LendingTime time.Time                               `protobuf:"bytes,6,opt,name=lending_time,json=lendingTime,proto3,stdtime" json:"lending_time" yaml:"lending_time"`
	Interest    github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,7,opt,name=interest,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"interest" yaml:"interest"`
}

func (m *Borrow_Asset) Reset()         { *m = Borrow_Asset{} }
func (m *Borrow_Asset) String() string { return proto.CompactTextString(m) }
func (*Borrow_Asset) ProtoMessage()    {}
func (*Borrow_Asset) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87bb4bef8334ddd, []int{1}
}
func (m *Borrow_Asset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Borrow_Asset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Borrow_Asset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Borrow_Asset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Borrow_Asset.Merge(m, src)
}
func (m *Borrow_Asset) XXX_Size() int {
	return m.Size()
}
func (m *Borrow_Asset) XXX_DiscardUnknown() {
	xxx_messageInfo_Borrow_Asset.DiscardUnknown(m)
}

var xxx_messageInfo_Borrow_Asset proto.InternalMessageInfo

func (m *Borrow_Asset) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Borrow_Asset) GetID_() uint64 {
	if m != nil {
		return m.ID_
	}
	return 0
}

func (m *Borrow_Asset) GetPairID() uint64 {
	if m != nil {
		return m.PairID
	}
	return 0
}

func (m *Borrow_Asset) GetAmountIn() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.AmountIn
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *Borrow_Asset) GetAmountOut() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.AmountOut
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *Borrow_Asset) GetLendingTime() time.Time {
	if m != nil {
		return m.LendingTime
	}
	return time.Time{}
}

func (m *Borrow_Asset) GetInterest() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.Interest
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

type Extended_Pair struct {
	Id                        uint64                                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetIn                   uint64                                 `protobuf:"varint,2,opt,name=asset_in,json=assetIn,proto3" json:"asset_in,omitempty" yaml:"asset_in"`
	AssetOut                  uint64                                 `protobuf:"varint,3,opt,name=asset_out,json=assetOut,proto3" json:"asset_out,omitempty" yaml:"asset_out"`
	ModuleAcc                 string                                 `protobuf:"bytes,4,opt,name=module_acc,json=moduleAcc,proto3" json:"module_acc,omitempty" yaml:"module_acc"`
	LiquidationRatio          github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,5,opt,name=liquidation_ratio,json=liquidationRatio,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"liquidation_ratio" yaml:"liquidation_ratio"`
	BaseBorrowRateAssetIn     github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,6,opt,name=base_borrow_rate_asset_in,json=baseBorrowRateAssetIn,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"base_borrow_rate_asset_in" yaml:"base_borrow_rate_asset_1"`
	BaseLendRateAssetIn       github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,7,opt,name=base_lend_rate_asset_in,json=baseLendRateAssetIn,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"base_lend_rate_asset_in" yaml:"base_lend_rate_asset_1"`
	BaseBorrowRateAssetOut    github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,8,opt,name=base_borrow_rate_asset_out,json=baseBorrowRateAssetOut,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"base_borrow_rate_asset_out" yaml:"base_borrow_rate_asset_2"`
	BaseLendRateAssetOut      github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,9,opt,name=base_lend_rate_asset_out,json=baseLendRateAssetOut,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"base_lend_rate_asset_out" yaml:"base_lend_rate_asset_2"`
	CurrentBorrowRateAssetIn  github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,10,opt,name=current_borrow_rate_asset_in,json=currentBorrowRateAssetIn,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"current_borrow_rate_asset_in" yaml:"current_borrow_rate_asset_1"`
	CurrentLendRateAssetIn    github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,11,opt,name=current_lend_rate_asset_in,json=currentLendRateAssetIn,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"current_lend_rate_asset_in" yaml:"current_lend_rate_asset_1"`
	CurrentBorrowRateAssetOut github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,12,opt,name=current_borrow_rate_asset_out,json=currentBorrowRateAssetOut,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"current_borrow_rate_asset_out" yaml:"current_borrow_rate_asset_2"`
	CurrentLendRateAssetOut   github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,13,opt,name=current_lend_rate_asset_out,json=currentLendRateAssetOut,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"current_lend_rate_asset_out" yaml:"current_lend_rate_asset_2"`
}

func (m *Extended_Pair) Reset()         { *m = Extended_Pair{} }
func (m *Extended_Pair) String() string { return proto.CompactTextString(m) }
func (*Extended_Pair) ProtoMessage()    {}
func (*Extended_Pair) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87bb4bef8334ddd, []int{2}
}
func (m *Extended_Pair) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Extended_Pair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Extended_Pair.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Extended_Pair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extended_Pair.Merge(m, src)
}
func (m *Extended_Pair) XXX_Size() int {
	return m.Size()
}
func (m *Extended_Pair) XXX_DiscardUnknown() {
	xxx_messageInfo_Extended_Pair.DiscardUnknown(m)
}

var xxx_messageInfo_Extended_Pair proto.InternalMessageInfo

func (m *Extended_Pair) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Extended_Pair) GetAssetIn() uint64 {
	if m != nil {
		return m.AssetIn
	}
	return 0
}

func (m *Extended_Pair) GetAssetOut() uint64 {
	if m != nil {
		return m.AssetOut
	}
	return 0
}

func (m *Extended_Pair) GetModuleAcc() string {
	if m != nil {
		return m.ModuleAcc
	}
	return ""
}

func init() {
	proto.RegisterType((*Lend_Asset)(nil), "comdex.lend.v1beta1.Lend_Asset")
	proto.RegisterType((*Borrow_Asset)(nil), "comdex.lend.v1beta1.Borrow_Asset")
	proto.RegisterType((*Extended_Pair)(nil), "comdex.lend.v1beta1.Extended_Pair")
}

func init() { proto.RegisterFile("comdex/lend/v1beta1/lend.proto", fileDescriptor_b87bb4bef8334ddd) }

var fileDescriptor_b87bb4bef8334ddd = []byte{
	// 902 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x4d, 0x6f, 0xe3, 0x44,
	0x18, 0xee, 0x64, 0xb7, 0x69, 0x33, 0x49, 0x97, 0xd6, 0xed, 0xee, 0xba, 0xd9, 0xad, 0x5d, 0xcd,
	0x61, 0xe9, 0x65, 0x6d, 0x25, 0x70, 0xda, 0x03, 0xda, 0x7a, 0x8b, 0x44, 0x10, 0x52, 0x61, 0xb4,
	0x27, 0x0e, 0x58, 0x8e, 0x3d, 0x0d, 0x23, 0x62, 0x4f, 0xb1, 0xc7, 0x74, 0x2b, 0x24, 0x0e, 0x48,
	0x88, 0x03, 0x02, 0xf5, 0x80, 0xf8, 0x05, 0xfc, 0x05, 0xfe, 0xc3, 0x1e, 0xf7, 0x88, 0x38, 0x18,
	0x94, 0xfe, 0x83, 0x1e, 0x39, 0xa1, 0xf9, 0x70, 0x9a, 0xb4, 0xae, 0x8a, 0x85, 0x72, 0xe3, 0x12,
	0xfb, 0x9d, 0xf7, 0xeb, 0x79, 0x9f, 0xf7, 0x71, 0x6c, 0x68, 0x85, 0x2c, 0x8e, 0xc8, 0x2b, 0x77,
	0x4c, 0x92, 0xc8, 0xfd, 0xaa, 0x37, 0x24, 0x3c, 0xe8, 0x49, 0xc3, 0x39, 0x4e, 0x19, 0x67, 0xc6,
	0xa6, 0xf2, 0x3b, 0xf2, 0x48, 0xfb, 0xbb, 0x5b, 0x23, 0x36, 0x62, 0xd2, 0xef, 0x8a, 0x3b, 0x15,
	0xda, 0xb5, 0x47, 0x8c, 0x8d, 0xc6, 0xc4, 0x95, 0xd6, 0x30, 0x3f, 0x72, 0x39, 0x8d, 0x49, 0xc6,
	0x83, 0xf8, 0x58, 0x07, 0x58, 0x21, 0xcb, 0x62, 0x96, 0xb9, 0xc3, 0x20, 0x23, 0xd3, 0x5e, 0x21,
	0xa3, 0x89, 0xf2, 0xa3, 0x6f, 0x97, 0x21, 0xfc, 0x88, 0x24, 0x91, 0xbf, 0x9f, 0x65, 0x84, 0x1b,
	0xcf, 0x20, 0x14, 0x5d, 0x69, 0x32, 0xf2, 0x69, 0x64, 0x82, 0x5d, 0xb0, 0x77, 0xd7, 0x7b, 0x34,
	0x29, 0xec, 0xc6, 0xe0, 0xe0, 0xa2, 0xb0, 0x37, 0x4e, 0x83, 0x78, 0xfc, 0x0c, 0x5d, 0x46, 0x20,
	0xdc, 0xd2, 0xc6, 0x20, 0x32, 0xde, 0x83, 0x1d, 0x61, 0xf8, 0xc7, 0x01, 0x4d, 0x45, 0x76, 0x43,
	0x66, 0x3f, 0x9e, 0x14, 0x76, 0xf3, 0xe3, 0x80, 0xa6, 0xb2, 0xc2, 0x3d, 0x55, 0x41, 0x87, 0x20,
	0x2c, 0xbb, 0x49, 0x6f, 0x64, 0x3c, 0x81, 0xcb, 0xec, 0x24, 0x21, 0xa9, 0x79, 0x67, 0x17, 0xec,
	0xb5, 0xbc, 0xf5, 0x8b, 0xc2, 0xee, 0xa8, 0x70, 0x79, 0x8c, 0xb0, 0x72, 0x1b, 0x5f, 0xc3, 0x56,
	0x10, 0xb3, 0x3c, 0xe1, 0x3e, 0x4d, 0xcc, 0xbb, 0xbb, 0x60, 0xaf, 0xdd, 0xdf, 0x76, 0xd4, 0x98,
	0x8e, 0x18, 0xb3, 0xa4, 0xcc, 0x79, 0xc1, 0x68, 0xe2, 0xbd, 0x78, 0x5d, 0xd8, 0x4b, 0x17, 0x85,
	0xbd, 0xae, 0x4a, 0x4d, 0x33, 0xd1, 0xdf, 0x85, 0xfd, 0xf6, 0x88, 0xf2, 0xcf, 0xf3, 0xa1, 0x13,
	0xb2, 0xd8, 0xd5, 0x3c, 0xa9, 0xcb, 0xd3, 0x2c, 0xfa, 0xc2, 0xe5, 0xa7, 0xc7, 0x24, 0x93, 0x45,
	0xf0, 0xaa, 0x4a, 0x1b, 0x24, 0xc6, 0x37, 0x10, 0xea, 0x12, 0x2c, 0xe7, 0xe6, 0xf2, 0x6d, 0xdd,
	0x0f, 0x74, 0xf7, 0x8d, 0xb9, 0xee, 0x2c, 0xe7, 0xb5, 0xda, 0xeb, 0x79, 0x0f, 0x73, 0x6e, 0x7c,
	0xa6, 0x48, 0x16, 0xf4, 0x8b, 0x55, 0x9b, 0x4d, 0x89, 0xa0, 0xeb, 0x28, 0x1d, 0x38, 0xa5, 0x0e,
	0x9c, 0x97, 0xa5, 0x0e, 0x3c, 0x5b, 0x43, 0xd8, 0x9c, 0x5f, 0x9e, 0xc8, 0x46, 0x67, 0x7f, 0xda,
	0x00, 0xb7, 0xf5, 0x91, 0x48, 0x31, 0x32, 0xd8, 0x4c, 0xc9, 0x49, 0x90, 0x46, 0xe6, 0xca, 0x6d,
	0xb3, 0x3d, 0xd7, 0x85, 0xd7, 0x54, 0x61, 0x95, 0x56, 0x6b, 0x2e, 0xdd, 0x0a, 0xfd, 0xba, 0x0c,
	0x3b, 0x1e, 0x4b, 0x53, 0x76, 0xa2, 0x65, 0xf8, 0x1c, 0x76, 0x86, 0xd2, 0x9e, 0x13, 0xe2, 0xce,
	0x54, 0x88, 0x7a, 0x96, 0xd9, 0x18, 0x84, 0xdb, 0x53, 0x73, 0x10, 0x5d, 0x11, 0x72, 0xe3, 0x3f,
	0x09, 0xf9, 0x4e, 0x4d, 0x21, 0xff, 0x2f, 0xd0, 0x05, 0x0a, 0xf4, 0x14, 0xae, 0xd2, 0x84, 0x93,
	0x94, 0x64, 0xfc, 0x76, 0x89, 0x7a, 0xba, 0xf4, 0x5b, 0xaa, 0x74, 0x99, 0x58, 0x8f, 0xda, 0x69,
	0xd6, 0x6f, 0x6d, 0xb8, 0xf6, 0xfe, 0x2b, 0x4e, 0x92, 0x88, 0x44, 0xbe, 0xd8, 0xb5, 0x71, 0x0f,
	0x36, 0x4a, 0x75, 0xe2, 0x06, 0x8d, 0x0c, 0x07, 0xae, 0x06, 0x42, 0xc0, 0x62, 0xf1, 0x4a, 0x73,
	0x9b, 0x97, 0xdd, 0x4b, 0x0f, 0xc2, 0x2b, 0xf2, 0x76, 0x90, 0x18, 0x3d, 0xd8, 0x52, 0xa7, 0x62,
	0x57, 0x4a, 0x66, 0x5b, 0x33, 0x52, 0x28, 0x5d, 0x08, 0xab, 0xb2, 0x82, 0xdf, 0x77, 0x21, 0x8c,
	0x59, 0x94, 0x8f, 0x89, 0x1f, 0x84, 0xa1, 0x54, 0x57, 0xcb, 0xbb, 0x7f, 0xb9, 0xc0, 0x4b, 0x1f,
	0xc2, 0x2d, 0x65, 0xec, 0x87, 0xa1, 0x71, 0x02, 0x37, 0xc6, 0xf4, 0xcb, 0x9c, 0x46, 0x01, 0xa7,
	0x2c, 0xf1, 0x53, 0x71, 0x91, 0xe2, 0x68, 0x79, 0x1f, 0x0a, 0x8e, 0xfe, 0x28, 0xec, 0x27, 0xff,
	0x82, 0x90, 0x03, 0x12, 0x5e, 0x14, 0xb6, 0xa9, 0x17, 0x75, 0xb5, 0x20, 0xc2, 0xeb, 0x33, 0x67,
	0x58, 0xfc, 0x1a, 0x3f, 0x00, 0xb8, 0x2d, 0xf6, 0xe2, 0xab, 0x87, 0x53, 0x04, 0x12, 0x7f, 0xca,
	0x51, 0x53, 0x22, 0xf8, 0xa4, 0x36, 0x02, 0x5b, 0x3f, 0xff, 0xd5, 0x85, 0x7b, 0x08, 0xdf, 0x17,
	0x2e, 0xf5, 0x97, 0x82, 0x03, 0x4e, 0xf6, 0x35, 0xdf, 0xdf, 0x01, 0xf8, 0x50, 0x26, 0xc9, 0xe7,
	0x7b, 0x1e, 0xcb, 0x8a, 0xc4, 0x72, 0x58, 0x1b, 0xcb, 0xce, 0x0c, 0x96, 0xab, 0x65, 0x7b, 0x08,
	0x6f, 0x0a, 0x87, 0x78, 0xc3, 0xce, 0xe2, 0xf8, 0x11, 0xc0, 0xee, 0x0d, 0xe0, 0x85, 0x12, 0x56,
	0x17, 0x42, 0x4b, 0x1f, 0xe1, 0x07, 0x15, 0xb4, 0x08, 0x51, 0x7d, 0x0f, 0xa0, 0x59, 0x39, 0x80,
	0x40, 0xd3, 0x5a, 0x00, 0x31, 0x7d, 0x84, 0xb7, 0xae, 0x11, 0x23, 0x90, 0xfc, 0x0c, 0xe0, 0xe3,
	0x30, 0x4f, 0x53, 0x92, 0xf0, 0x6a, 0xc9, 0x40, 0x89, 0xe6, 0x65, 0x6d, 0x34, 0x48, 0xa1, 0xb9,
	0xb9, 0x76, 0x0f, 0x61, 0x53, 0x7b, 0xaf, 0x0b, 0xe7, 0x27, 0x00, 0xbb, 0x65, 0x6a, 0x85, 0x76,
	0xda, 0x12, 0x14, 0xae, 0x0d, 0x6a, 0x77, 0x1e, 0x54, 0x85, 0x7c, 0x1e, 0x68, 0xdf, 0x55, 0x05,
	0xfd, 0x02, 0xe0, 0xce, 0xcd, 0xb3, 0x88, 0xb5, 0x75, 0x16, 0x45, 0x54, 0x1f, 0xe1, 0xed, 0x6a,
	0xa2, 0xc4, 0x02, 0xcf, 0x00, 0x7c, 0x74, 0xd3, 0x3c, 0x02, 0xd6, 0xda, 0x62, 0xa8, 0xea, 0x23,
	0xfc, 0xb0, 0x8a, 0xaa, 0xc3, 0x9c, 0x7b, 0x1f, 0xbc, 0x9e, 0x58, 0xe0, 0xcd, 0xc4, 0x02, 0x7f,
	0x4d, 0x2c, 0x70, 0x76, 0x6e, 0x2d, 0xbd, 0x39, 0xb7, 0x96, 0x7e, 0x3f, 0xb7, 0x96, 0x3e, 0x75,
	0xe6, 0xda, 0x8b, 0x8f, 0xee, 0xa7, 0xec, 0xe8, 0x88, 0x86, 0x34, 0x18, 0x6b, 0xdb, 0xd5, 0x9f,
	0xe9, 0x12, 0xca, 0xb0, 0x29, 0x5f, 0x5f, 0xef, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x64,
	0x3a, 0x1e, 0xc2, 0x0b, 0x00, 0x00,
}

func (m *Lend_Asset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Lend_Asset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Lend_Asset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Reward.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LendingTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LendingTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintLend(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x32
	{
		size, err := m.AmountOut.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size, err := m.AmountIn.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintLend(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PairID != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.PairID))
		i--
		dAtA[i] = 0x10
	}
	if m.ID != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Borrow_Asset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Borrow_Asset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Borrow_Asset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Interest.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LendingTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LendingTime):])
	if err6 != nil {
		return 0, err6
	}
	i -= n6
	i = encodeVarintLend(dAtA, i, uint64(n6))
	i--
	dAtA[i] = 0x32
	{
		size, err := m.AmountOut.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size, err := m.AmountIn.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if m.PairID != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.PairID))
		i--
		dAtA[i] = 0x18
	}
	if m.ID != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x10
	}
	if m.ID != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Extended_Pair) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Extended_Pair) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Extended_Pair) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.CurrentLendRateAssetOut.Size()
		i -= size
		if _, err := m.CurrentLendRateAssetOut.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x6a
	{
		size := m.CurrentBorrowRateAssetOut.Size()
		i -= size
		if _, err := m.CurrentBorrowRateAssetOut.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x62
	{
		size := m.CurrentLendRateAssetIn.Size()
		i -= size
		if _, err := m.CurrentLendRateAssetIn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x5a
	{
		size := m.CurrentBorrowRateAssetIn.Size()
		i -= size
		if _, err := m.CurrentBorrowRateAssetIn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x52
	{
		size := m.BaseLendRateAssetOut.Size()
		i -= size
		if _, err := m.BaseLendRateAssetOut.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	{
		size := m.BaseBorrowRateAssetOut.Size()
		i -= size
		if _, err := m.BaseBorrowRateAssetOut.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.BaseLendRateAssetIn.Size()
		i -= size
		if _, err := m.BaseLendRateAssetIn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.BaseBorrowRateAssetIn.Size()
		i -= size
		if _, err := m.BaseBorrowRateAssetIn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size := m.LiquidationRatio.Size()
		i -= size
		if _, err := m.LiquidationRatio.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLend(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.ModuleAcc) > 0 {
		i -= len(m.ModuleAcc)
		copy(dAtA[i:], m.ModuleAcc)
		i = encodeVarintLend(dAtA, i, uint64(len(m.ModuleAcc)))
		i--
		dAtA[i] = 0x22
	}
	if m.AssetOut != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.AssetOut))
		i--
		dAtA[i] = 0x18
	}
	if m.AssetIn != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.AssetIn))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintLend(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintLend(dAtA []byte, offset int, v uint64) int {
	offset -= sovLend(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Lend_Asset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovLend(uint64(m.ID))
	}
	if m.PairID != 0 {
		n += 1 + sovLend(uint64(m.PairID))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovLend(uint64(l))
	}
	l = m.AmountIn.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.AmountOut.Size()
	n += 1 + l + sovLend(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LendingTime)
	n += 1 + l + sovLend(uint64(l))
	l = m.Reward.Size()
	n += 1 + l + sovLend(uint64(l))
	return n
}

func (m *Borrow_Asset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovLend(uint64(m.ID))
	}
	if m.ID != 0 {
		n += 1 + sovLend(uint64(m.ID))
	}
	if m.PairID != 0 {
		n += 1 + sovLend(uint64(m.PairID))
	}
	l = m.AmountIn.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.AmountOut.Size()
	n += 1 + l + sovLend(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LendingTime)
	n += 1 + l + sovLend(uint64(l))
	l = m.Interest.Size()
	n += 1 + l + sovLend(uint64(l))
	return n
}

func (m *Extended_Pair) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovLend(uint64(m.Id))
	}
	if m.AssetIn != 0 {
		n += 1 + sovLend(uint64(m.AssetIn))
	}
	if m.AssetOut != 0 {
		n += 1 + sovLend(uint64(m.AssetOut))
	}
	l = len(m.ModuleAcc)
	if l > 0 {
		n += 1 + l + sovLend(uint64(l))
	}
	l = m.LiquidationRatio.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.BaseBorrowRateAssetIn.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.BaseLendRateAssetIn.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.BaseBorrowRateAssetOut.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.BaseLendRateAssetOut.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.CurrentBorrowRateAssetIn.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.CurrentLendRateAssetIn.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.CurrentBorrowRateAssetOut.Size()
	n += 1 + l + sovLend(uint64(l))
	l = m.CurrentLendRateAssetOut.Size()
	n += 1 + l + sovLend(uint64(l))
	return n
}

func sovLend(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLend(x uint64) (n int) {
	return sovLend(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Lend_Asset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Lend_Asset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Lend_Asset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairID", wireType)
			}
			m.PairID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PairID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountIn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountOut", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LendingTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LendingTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Reward.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Borrow_Asset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Borrow_Asset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Borrow_Asset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairID", wireType)
			}
			m.PairID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PairID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountIn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountOut", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LendingTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LendingTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Interest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Extended_Pair) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Extended_Pair: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Extended_Pair: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetIn", wireType)
			}
			m.AssetIn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetIn |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetOut", wireType)
			}
			m.AssetOut = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetOut |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAcc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleAcc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiquidationRatio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LiquidationRatio.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseBorrowRateAssetIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BaseBorrowRateAssetIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseLendRateAssetIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BaseLendRateAssetIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseBorrowRateAssetOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BaseBorrowRateAssetOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseLendRateAssetOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BaseLendRateAssetOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentBorrowRateAssetIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CurrentBorrowRateAssetIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentLendRateAssetIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CurrentLendRateAssetIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentBorrowRateAssetOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CurrentBorrowRateAssetOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentLendRateAssetOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CurrentLendRateAssetOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLend(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLend
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLend
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLend
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLend
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLend
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLend
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLend        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLend          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLend = fmt.Errorf("proto: unexpected end of group")
)
