syntax = "proto3";
package comdex.esm.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/comdex-official/comdex/x/esm/types";

message ESMTriggerParams {
  uint64 app_id = 1 [
    (gogoproto.customname) = "AppId",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  cosmos.base.v1beta1.Coin target_value = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"target_value\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];

  uint64 cool_off_period = 3 [
    (gogoproto.customname) = "CoolOffPeriod",
    (gogoproto.moretags) = "yaml:\"cool_off_period\""
  ];

  repeated DebtAssetsRates assetsRates = 4 [
    (gogoproto.customname) = "AssetsRates",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"assets_rates\""
  ];
}

message CurrentDepositStats{
  uint64 app_id = 1 [
    (gogoproto.customname) = "AppId",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  cosmos.base.v1beta1.Coin balance = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"balance\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message ESMStatus{
  uint64 app_id = 1 [
    (gogoproto.customname) = "AppId",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  string executor = 2 [(gogoproto.moretags) = "yaml:\"executor\""];

  bool status = 3 [
    (gogoproto.moretags) = "yaml:\"status\""
  ];

  google.protobuf.Timestamp start_time = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];

  google.protobuf.Timestamp end_time = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];

  bool vault_redemption_status = 6 [
    (gogoproto.moretags) = "yaml:\"vault_redemption_status\""
  ];

  bool snapshotStatus = 7 [
    (gogoproto.moretags) = "yaml:\"snapshot_status\""
  ];

  bool stable_vault_redemption_status = 8 [
    (gogoproto.moretags) = "yaml:\"stable_vault_redemption_status\""
  ];

  bool collector_transaction = 9 [
    (gogoproto.moretags) = "yaml:\"collector_transaction\""
  ];

  bool share_calculation = 10 [
    (gogoproto.moretags) = "yaml:\"share_calculation\""
  ];
}

message KillSwitchParams{
  uint64 appId = 1 [ (gogoproto.moretags) = "yaml:\"appId\"" ];
  bool breaker_enable = 2 [ (gogoproto.moretags) = "yaml:\"breaker_enable\"" ];
}

message UsersDepositMapping{
  uint64 app_id = 1 [
    (gogoproto.customname) = "AppId",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  string depositor = 2 [(gogoproto.moretags) = "yaml:\"depositor\""];

  cosmos.base.v1beta1.Coin deposits = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"deposits\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message DataAfterCoolOff {
  uint64 appId = 1 [ (gogoproto.moretags) = "yaml:\"appId\"" ];
  string collateral_total_amount = 2 [(gogoproto.moretags) = "yaml:\"collateral_total_amount\"",
  (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
  (gogoproto.nullable) = false];
  string debt_total_amount = 3 [(gogoproto.moretags) = "yaml:\"debt_total_amount\"",
  (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
  (gogoproto.nullable) = false];
}

message AssetToAmount {
  uint64 appId = 1 [ (gogoproto.moretags) = "yaml:\"appId\"" ];
  uint64 asset_id = 2 [
    (gogoproto.customname) = "AssetID",
    (gogoproto.moretags) = "yaml:\"asset_id\""
  ];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
  string share = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"share\""
  ];
  string debt_token_worth = 5 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"debt_token_worth\"",
    (gogoproto.nullable) = false
  ];
  bool is_collateral = 6 [(gogoproto.moretags) = "yaml:\"is_collateral\""];
}

message DebtAssetsRates {
  uint64 asset_id = 1 [
    (gogoproto.customname) = "AssetID",
    (gogoproto.moretags) = "yaml:\"asset_id\""
  ];
  uint64 rates = 2;
}