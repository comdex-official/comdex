syntax = "proto3";
package petri.liquidation.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/petrichormoney/petri/x/liquidation/types";
option (gogoproto.equal_all)           = false;
option (gogoproto.goproto_getters_all) = false;

service Msg {
  rpc MsgLiquidateVault(MsgLiquidateVaultRequest) returns (MsgLiquidateVaultResponse);

  rpc MsgLiquidateBorrow(MsgLiquidateBorrowRequest) returns (MsgLiquidateBorrowResponse);
}

message MsgLiquidateVaultRequest {
    string from    = 1 [ (gogoproto.moretags) = "yaml:\"from\"" ];
    uint64 app_id = 2 [
      (gogoproto.customname) = "AppId",
      (gogoproto.moretags) = "yaml:\"app_id\""];
  
    uint64 vault_id = 3 [
      (gogoproto.customname) = "VaultId",
      (gogoproto.moretags) = "yaml:\"vault_id\""];
  }
  message  MsgLiquidateVaultResponse{}
  
  message MsgLiquidateBorrowRequest {
    string from    = 1 [ (gogoproto.moretags) = "yaml:\"from\"" ];
  
    uint64 borrow_id = 2 [
      (gogoproto.customname) = "BorrowId",
      (gogoproto.moretags) = "yaml:\"borrow_id\""];
  }
  message  MsgLiquidateBorrowResponse{}
